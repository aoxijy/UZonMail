name: Build UZonMail - All Platforms

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:  # 允许手动触发

env:
  DOTNET_VERSION: '9.0.x'
  NODE_VERSION: '18.x'

jobs:
  build-all:
    name: Build All Platforms
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Switch to master branch
      run: |
        git checkout master
        git branch
      
    - name: Setup .NET 9.0 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js and Yarn
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
        
    - name: Install Yarn globally
      run: npm install -g yarn
      
    - name: Install 7zip via Chocolatey
      run: choco install 7zip -y
      
    - name: Verify installed tools
      run: |
        dotnet --version
        node --version
        yarn --version
        7z
        git --version
        
    - name: Run build-all script
      shell: pwsh
      working-directory: ./scripts
      run: |
        ./build-all.ps1
        
    - name: List build artifacts
      shell: pwsh
      run: |
        Write-Host "=== Build Artifacts ==="
        if (Test-Path "./build") {
          Get-ChildItem -Path ./build -Recurse -File | ForEach-Object { 
            Write-Host "Found: $($_.FullName)" 
          }
        } else {
          Write-Host "Build directory not found!"
        }
        
    - name: Upload all build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: uzonmail-all-platforms
        path: |
          ./build/*.zip
          ./build/*.tar.gz
        retention-days: 30
        if-no-files-found: error

  build-desktop-only:
    name: Build Desktop Only
    runs-on: windows-latest
    if: false  # 默认禁用，可通过手动触发选择
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET 9.0 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install 7zip
      run: choco install 7zip -y
      
    - name: Run desktop build script
      shell: pwsh
      working-directory: ./scripts
      run: |
        ./build-desktop.ps1
        
    - name: Upload desktop artifact
      uses: actions/upload-artifact@v4
      with:
        name: uzonmail-desktop
        path: ./build/uzonmail-desktop-win-x64-*.zip
        retention-days: 30

  build-windows-server-only:
    name: Build Windows Server Only
    runs-on: windows-latest
    if: false  # 默认禁用，可通过手动触发选择
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET 9.0 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install 7zip
      run: choco install 7zip -y
      
    - name: Run windows server build script
      shell: pwsh
      working-directory: ./scripts
      run: |
        ./build-win-server.ps1
        
    - name: Upload windows server artifact
      uses: actions/upload-artifact@v4
      with:
        name: uzonmail-windows-server
        path: ./build/uzonmail-service-win-x64-*.zip
        retention-days: 30

  build-linux-and-docker:
    name: Build Linux and Docker
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET 9.0 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install Yarn globally
      run: npm install -g yarn
      
    - name: Install 7zip on Linux
      run: sudo apt-get update && sudo apt-get install -y p7zip-full
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub (optional)
      if: false  # 设置为true并添加credentials如需推送镜像
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Run linux build script
      shell: pwsh
      working-directory: ./scripts
      run: |
        ./build-linux.ps1
        
    - name: List Docker images
      run: docker images
      
    - name: Upload linux server artifact
      uses: actions/upload-artifact@v4
      with:
        name: uzonmail-linux-server
        path: ./build/uzonmail-linux-x64-*.zip
        retention-days: 30
        
    - name: Save Docker image
      run: |
        docker save uzon-mail:latest -o uzonmail-docker-latest.tar
        ls -la
      working-directory: ./build
      
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: uzonmail-docker-image
        path: ./build/uzonmail-docker-latest.tar
        retention-days: 30
