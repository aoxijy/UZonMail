// #region 边框样式
.border-radius-4 {
  border-radius: 4px;
}

.border-radius-6 {
  border-radius: 4px;
}

.border-radius-8 {
  border-radius: 8px;
}

.border-radius-12 {
  border-radius: 8px;
}

.border-radius-16 {
  border-radius: 16px;
}

.hover-underline {
  cursor: pointer;
  border-bottom: 1px solid transparent;
  padding-bottom: 1px; // 调整这个值来控制线和文字的距离
  &:hover {
    border-bottom: 1px solid currentColor;
    color: $primary;
  }
}

// 鼠标悬停时以卡片状态显示
.hover-card {
  cursor: pointer;
  transition: all 0.3s;
  &:hover {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3);
    // 绕中心放大
    transform: scale(1.03);
  }
}

// 卡片样式
.card-like {
  border-radius: 4px;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  background-color: #fff;
}

// 卡片样式，没见有圆角
.card-like-borderless {
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
  background-color: #fff;
}
// #endregion

// y轴滚动条
.scroll-y {
  overflow-y: auto;
}

.scroll-x {
  overflow-x: auto;
}

.scroll_pretty {
  &::-webkit-scrollbar-track-piece {
    background: #d3dce6;
  }

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background: #99a9bf;
    border-radius: 20px;
  }
}

// 美化样式
.hover-scroll {
  overflow: overlay;

  /* 隐藏滚动条*/
  &::-webkit-scrollbar {
    width: 0px; // 垂直滚动条宽度
    height: 0px; // 水平滚动条高度
  }

  &:hover::-webkit-scrollbar {
    width: 5px;
    height: 5px;
    background-color: transparent;
  }

  /* 鼠标未悬停时，滚动条透明 */
  &::-webkit-scrollbar-thumb {
    background-color: transparent;
    transition: all 0.3s ease-in-out;
    border-radius: 2px;
  }

  /* 鼠标悬停时，滚动条显示 */
  &:hover::-webkit-scrollbar-thumb {
    background-color: #e0e0e0;
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
  }

  &:hover::-webkit-scrollbar-track {
    background-color: transparent;
  }

  &:hover::-webkit-scrollbar-track-piece {
    background-color: transparent;
  }
}

// #region 尺寸
.half-height {
  height: 50%;
}

.half-width {
  width: 50%;
}

// 设定高度为 0
// 在 flex 某些场景中需要用到
.height-0 {
  height: 0px;
}

.height-200 {
  height: 200px;
}
.height-300 {
  height: 300px;
}
.height-400 {
  height: 400px;
}
.height-500 {
  height: 500px;
}
.height-600 {
  height: 600px;
}
.max-height-200 {
  max-width: 200px;
}
.max-height-300 {
  max-width: 300px;
}
.max-height-400 {
  max-width: 400px;
}
.max-height-500 {
  max-width: 500px;
}
.max-height-600 {
  max-width: 600px;
}

.width-200 {
  width: 200px;
}
.width-300 {
  width: 300px;
}
.width-400 {
  width: 400px;
}
.width-500 {
  width: 500px;
}
.width-600 {
  width: 600px;
}
.width-700 {
  width: 600px;
}
.width-800 {
  width: 600px;
}

.max-width-200 {
  max-width: 200px;
}
.max-width-300 {
  max-width: 300px;
}
.max-width-400 {
  max-width: 400px;
}
// #endregion

// 透明背景
.bg-transparent {
  background-color: transparent;
}

// warning: 使用该css时，需要将文本包裹在 <span dir="ltr">{{ props.value }}</span> 里，否则数字+空格开头会粘在文本的末尾
.ellipsis-left {
  /* Standard CSS ellipsis */
  white-space: nowrap; // 让文字显示成一行
  overflow: hidden;
  text-overflow: ellipsis;

  /* Beginning of string */
  direction: rtl;
  text-align: left;
}

.ellipsis {
  /* Standard CSS ellipsis */
  white-space: nowrap; // 让文字显示成一行
  overflow: hidden;
  text-overflow: ellipsis;
}

// 实现placeholder效果
[contentEditable='true']:empty:before {
  content: attr(placeholder);
  color: #b3b3b3;
  cursor: text;
}

// MARK: flex 布局
// #region flex 布局
// 默认一列，大于 600 时，两列
.col-auto-2 {
  width: 0px; // echarts 需要这个属性来触发变化
  flex: 1 1 100%;

  @media screen and (min-width: 576px) {
    flex: 1 1 50%;
  }
}

// 在 1~4 列之间动态变换
.col-auto-4 {
  width: 100%;
  padding: 4px;

  @media (min-width: 576px) {
    width: 50%;
  }
  @media (min-width: 768px) {
    width: 33.33%;
  }
  @media (min-width: 992px) {
    width: 25%;
  }
}
// #endregion

// #region 鼠标相关
.clickable {
  cursor: pointer;
  padding: 4px;
  &:hover {
    border-radius: 4px;
    background-color: $grey-12;
  }
}
// #endregion
